use = "pairwise.complete.obs"
) / var(xvar, na.rm=TRUE)
}
hr.emf.vwo <- hedge.ratio(dat2$EMFAdjDReturn, dat2$VWOADjDReturn)
hedge.ratio <- function(xvar, yvar)
{
cov(yvar,
xvar,
use = "pairwise.complete.obs")
/ var(xvar, na.rm=TRUE)
}
hr.emf.vwo <- hedge.ratio(dat2$EMFAdjDReturn, dat2$VWOADjDReturn)
hedge.ratio <- function(xvar, yvar)
{
cov(yvar,
xvar,
use = "pairwise.complete.obs"
) / var(xvar, na.rm=TRUE)
}
hr.emf.vwo <- hedge.ratio(dat2$EMFAdjDReturn, dat2$VWOADjDReturn)
hr.emf.vwo <- hedge.ratio(dat2$EMFAdjDReturn, dat2$VWOADjDReturn)
class(dat2)
typeof(date2)
typeof(dat2)
cor(dat2)
hr_emf_vwo <- cov(dat2$VWOAdjDReturn,
dat2$EMFAdjDReturn,
use = "pairwise.complete.obs"
) /
var(dat2$EMFAdjDReturn,
na.rm=TRUE
)
rm(hr_emf_vwo)
hr_emf_vwo <- cov(dat2$VWOAdjDReturn,
dat2$EMFAdjDReturn,
use = "pairwise.complete.obs"
) /
var(dat2$EMFAdjDReturn,
na.rm=TRUE
)
?typeof
typeof(dat2$EMFAdjDReturn)
typeof(dat2$EMFAdjDReturn) == "numeric"
typeof(dat2$EMFAdjDReturn) == "double"
class(dat2$EMFAdjDReturn)
dat$FMEMAdjPriceLag2 <- diff(dat$FMEMAdjPrice)
hr.emf.vwo <- hedge.ratio(dat2$EMFAdjDReturn, dat2$VWOADjDReturn)
hr.emf.vwo <- hedge.ratio(dat2$EMFAdjDReturn, dat2$VWOADjDReturn)
hr.emf.vwo <- hedge.ratio(dat2$EMFAdjDReturn, dat2$VWOAdjDReturn)
hr.emf.vwo <- hedge.ratio(dat2$EMFAdjDReturn, dat2$VWOAdjDReturn)
hr_emf_vwo <- hedge.ratio(dat2$EMFAdjDReturn, dat2$VWOAdjDReturn)
rm(hr.emf.vwo)
rm(hr_emf_vwo)
?rnorm
rnorm(10)
rnorm(10)
rnorm(10)
rnorm(10)
mean(rnorm(10))
# Estimating the Hedge Ratio (OLS) for VWO ~ EMF
lm_emf_vwo <- lm(VWOAdjDReturn ~ EMFAdjDReturn, data = dat2)
View(lm_emf_vwo)
rm(lm_emf_vwo)
mean(rnorm(10))
mean(rnorm(10))
mean(rnorm(10))
mean(rnorm(10))
mean(rnorm(10))
mean(rnorm(1000))
mean(rnorm(1000))
mean(rnorm(1000))
mean(rnorm(1000))
mean(rnorm(1000))
mean(rnorm(1000))
std(rnorm(100000))
apply(dat2, 2, hedge.ratio)
cov(dat2, use = "pairwise.complete.obs"
cov(dat2, use = "pairwise.complete.obs")
cov(dat2[2:5,], use = "pairwise.complete.obs")
cov(dat2[,2:5], use = "pairwise.complete.obs")
cov_matrix <- cov(dat2[,2:5], use = "pairwise.complete.obs")
View(cov_matrix)
typeof(cov_matrix)
class(cov_matrix)
for (col1 in 2:ncol(dat2))
{
for (col2 in 2:ncol(dat2))
{
hedge.ratio(col1, col2)
}
}
col1
for (col1 in 2:ncol(dat2))
{
for (col2 in 2:ncol(dat2))
{
print(hedge.ratio(col1, col2))
}
}
hedge.ratio <- function(xvar, yvar) {
cov(yvar,
xvar,
use = "pairwise.complete.obs"
) / var(xvar, na.rm=TRUE)
}
hr_emf_vwo <- hedge.ratio(dat2$EMFAdjDReturn, dat2$VWOAdjDReturn)
for (col1 in 2:ncol(dat2)) {
for (col2 in 2:ncol(dat2)) {
print(col1)
# print(hedge.ratio(col1, col2))
}
}
for (col1 in 2:ncol(dat2)) {
for (col2 in 2:ncol(dat2)) {
print(dat2[,col1])
# print(hedge.ratio(col1, col2))
}
}
for (col1 in 2:ncol(dat2)) {
for (col2 in 2:ncol(dat2)) {
# print(dat2[,col1])
print(hedge.ratio(dat2[,col1], dat2[,col2]))
}
}
d <- 5
for(i in 1:10) {
nam <- paste("A", i, sep = "")
assign(nam, rnorm(3)+d)
}
for (col1 in 2:ncol(dat2)) {
for (col2 in 2:ncol(dat2)) {
# print(dat2[,col1])
var <- hedge.ratio(dat2[,col1], dat2[,col2]))
}
}
for (col1 in 2:ncol(dat2)) {
for (col2 in 2:ncol(dat2)) {
# print(dat2[,col1])
var <- hedge.ratio(dat2[,col1], dat2[,col2])
}
}
View(var)
for (col1 in 2:ncol(dat2)) {
for (col2 in 2:ncol(dat2)) {
# print(dat2[,col1])
name <- paste("hr", col1, col2, sep="_")
assing(name, hedge.ratio(dat2[,col1], dat2[,col2]))
}
}
for (col1 in 2:ncol(dat2)) {
for (col2 in 2:ncol(dat2)) {
# print(dat2[,col1])
name <- paste("hr", col1, col2, sep="_")
assign(name, hedge.ratio(dat2[,col1], dat2[,col2]))
}
}
## Importing data ==============================================================
rm(list = ls())
## Importing data ==============================================================
# rm(list = ls())
dat <- as_tibble(read.csv("MainData01_CSV.csv"))
## Data cleaning and sorting ===================================================
dat$Dates <- as.Date(dat$Dates, "%m/%d/%Y")           # Convert char into dates
dat <- dat[order(dat$Dates, decreasing = FALSE),]     # Sort by column(s)
# Calculating lagged values
dat$FMEMAdjPriceLag1 <- lag(dat$FMEMAdjPrice)
dat$EMFAdjPriceLag1 <- lag(dat$EMFAdjPrice)
dat$VWOAdjPriceLag1 <- lag(dat$VWOAdjPrice)
dat$FTSEPriceLag1 <- lag(dat$FTSEPrice)
# Calculating returns - daily
dat$emf_dret <- (dat$EMFAdjPrice / dat$EMFAdjPriceLag1) - 1
dat$fmem_dret <- (dat$FMEMAdjPrice / dat$FMEMAdjPriceLag1) - 1
dat$vwo_dret <- (dat$VWOAdjPrice / dat$VWOAdjPriceLag1) - 1
dat$ftse_dret <- (dat$FTSEPrice / dat$FTSEPriceLag1) - 1
# Subsetting data to keep relevant variables
keepvars <- c("Dates",
"emf_dret",
"fmem_dret",
"vwo_dret",
"ftse_dret"
)
# Summary statistics of key variables ==========================================
head(dat2)
dat2 <- dat[keepvars]
# Summary statistics of key variables ==========================================
head(dat2)
summary(dat2)
plot(dat2)
## Importing data ==============================================================
rm(list = ls())
## Importing data ==============================================================
# rm(list = ls())
dat <- as_tibble(read.csv("MainData01_CSV.csv"))
## Data cleaning and sorting ===================================================
dat$date <- as.Date(dat$Dates, "%m/%d/%Y")           # Convert char into dates
## Importing data ==============================================================
# rm(list = ls())
dat <- as_tibble(read.csv("MainData01_CSV.csv"))
## Data cleaning and sorting ===================================================
dat$date <- as.Date(dat$Dates, "%m/%d/%Y")           # Convert char into dates
## Data cleaning and sorting ===================================================
dat$Dates <- as.Date(dat$Dates, "%m/%d/%Y")           # Convert char into dates
dat <- dat[order(dat$Dates, decreasing = FALSE),]     # Sort by column(s)
# Calculating lagged values
dat$FMEMAdjPriceLag1 <- lag(dat$FMEMAdjPrice)
dat$EMFAdjPriceLag1 <- lag(dat$EMFAdjPrice)
dat$VWOAdjPriceLag1 <- lag(dat$VWOAdjPrice)
dat$FTSEPriceLag1 <- lag(dat$FTSEPrice)
# Calculating returns - daily
dat$emf_dret <- (dat$EMFAdjPrice / dat$EMFAdjPriceLag1) - 1
dat$fmem_dret <- (dat$FMEMAdjPrice / dat$FMEMAdjPriceLag1) - 1
dat$vwo_dret <- (dat$VWOAdjPrice / dat$VWOAdjPriceLag1) - 1
dat$ftse_dret <- (dat$FTSEPrice / dat$FTSEPriceLag1) - 1
# Subsetting data to keep relevant variables
keepvars <- c("emf_dret",
"fmem_dret",
"vwo_dret",
"ftse_dret"
)
dat2 <- dat[keepvars]
# Summary statistics of key variables ==========================================
head(dat2)
summary(dat2)
plot(dat2)
# Calculating the hedge ratio for all pairs (VAR-COV)
hedge.ratio <- function(xvar, yvar) {
cov(yvar,
xvar,
use = "pairwise.complete.obs"
) / var(xvar, na.rm=TRUE)
}
hr_emf_vwo <- hedge.ratio(dat2$emf_dret, dat2$vwo_dret)
hr_emf_ftse <- hedge.ratio(dat2$emf_dret, dat2$ftse_dret)
hr_fmem_vwo <- hedge.ratio(dat2$fmem_dret, dat2$vwo_dret)
hr_fmem_ftse <- hedge.ratio(dat2$fmem_dret, dat2$ftse_dret)
he_emf_vwo <- 1 - ((var(dat2$vwo_dret, na.rm=TRUE) +
hr_emf_vwo ^ 2 *
var(dat2$emf_dret, na.rm=TRUE) -
2 * hr_emf_vwo *
cov(dat2$emf_dret,
dat2$vwo_dret,
use="pairwise.complete.obs")) /
var(dat2$vwo_dret, na.rm=TRUE))
he_emf_vwo <- 1 - ((var(dat2$vwo_dret, na.rm=TRUE) +
hr_emf_vwo ^ 2 *
var(dat2$emf_dret, na.rm=TRUE) -
2 * hr_emf_vwo *
cov(dat2$emf_dret,
dat2$vwo_dret,
use="pairwise.complete.obs"))
/ var(dat2$vwo_dret, na.rm=TRUE))
he_eef_vwo <- 1 - ((var(dat2$vwo_dret, na.rm=TRUE) +
hr_emf_vwo ^ 2 *
var(dat2$emf_dret, na.rm=TRUE) -
2 * hr_emf_vwo *
cov(dat2$emf_dret,
dat2$vwo_dret,
use="pairwise.complete.obs"))
/ var(dat2$vwo_dret, na.rm=TRUE))
## Importing data ==============================================================
rm(list = ls())
dat <- as_tibble(read.csv("MainData01_CSV.csv"))
# dat <- read.csv("MainData01_CSV.csv")
# names(dat)
# head(dat, n = 5)
# attach(dat)
## Data cleaning and sorting ===================================================
dat$Dates <- as.Date(dat$Dates, "%m/%d/%Y")           # Convert char into dates
dat <- dat[order(dat$Dates, decreasing = FALSE),]     # Sort by column(s)
## Creating key variables ======================================================
# Calculating lagged values
dat$FMEMAdjPriceLag1 <- lag(dat$FMEMAdjPrice)
dat$EMFAdjPriceLag1 <- lag(dat$EMFAdjPrice)
dat$VWOAdjPriceLag1 <- lag(dat$VWOAdjPrice)
dat$FTSEPriceLag1 <- lag(dat$FTSEPrice)
# Calculating returns - daily
dat$emf_dret <- (dat$EMFAdjPrice / dat$EMFAdjPriceLag1) - 1
dat$fmem_dret <- (dat$FMEMAdjPrice / dat$FMEMAdjPriceLag1) - 1
dat$vwo_dret <- (dat$VWOAdjPrice / dat$VWOAdjPriceLag1) - 1
dat$ftse_dret <- (dat$FTSEPrice / dat$FTSEPriceLag1) - 1
# Subsetting data to keep relevant variables
keepvars <- c("emf_dret",
"fmem_dret",
"vwo_dret",
"ftse_dret"
)
dat2 <- dat[keepvars]
# Summary statistics of key variables ==========================================
head(dat2)
summary(dat2)
plot(dat2)
## Importing data ==============================================================
rm(list = ls())
dat <- as_tibble(read.csv("MainData01_CSV.csv"))
# dat <- read.csv("MainData01_CSV.csv")
# names(dat)
# head(dat, n = 5)
# attach(dat)
## Data cleaning and sorting ===================================================
dat$Dates <- as.Date(dat$Dates, "%m/%d/%Y")           # Convert char into dates
dat <- dat[order(dat$Dates, decreasing = FALSE),]     # Sort by column(s)
## Creating key variables ======================================================
# Calculating lagged values
dat$FMEMAdjPriceLag1 <- lag(dat$FMEMAdjPrice)
dat$EMFAdjPriceLag1 <- lag(dat$EMFAdjPrice)
dat$VWOAdjPriceLag1 <- lag(dat$VWOAdjPrice)
dat$FTSEPriceLag1 <- lag(dat$FTSEPrice)
# Calculating returns - daily
dat$emf_dret <- (dat$EMFAdjPrice / dat$EMFAdjPriceLag1) - 1
dat$fmem_dret <- (dat$FMEMAdjPrice / dat$FMEMAdjPriceLag1) - 1
dat$vwo_dret <- (dat$VWOAdjPrice / dat$VWOAdjPriceLag1) - 1
dat$ftse_dret <- (dat$FTSEPrice / dat$FTSEPriceLag1) - 1
# Subsetting data to keep relevant variables
keepvars <- c("emf_dret",
"fmem_dret",
"vwo_dret",
"ftse_dret"
)
dat2 <- dat[keepvars]
# Summary statistics of key variables ==========================================
head(dat2)
summary(dat2)
plot(dat2)
## Importing data ==============================================================
rm(list = ls())
pacman::p_load(pacman,
dplyr,
tidyr,
stringr,
lubridate,
httr,
ggvis,
ggplot2,
shiny,
rio,
rmarkdown,
tibble
)
## Setting working directory ===================================================
getwd()
setwd("C:/Users/juanf/OneDrive/GitRepos/emf_futures/data")
## Importing data ==============================================================
# rm(list = ls())
dat <- as_tibble(read.csv("MainData01_CSV.csv"))
dat$Dates <- as.Date(dat$Dates, "%m/%d/%Y")           # Convert char into dates
dat <- dat[order(dat$Dates, decreasing = FALSE),]     # Sort by column(s)
## Creating key variables ======================================================
# Calculating lagged values
dat$FMEMAdjPriceLag1 <- lag(dat$FMEMAdjPrice)
dat$EMFAdjPriceLag1 <- lag(dat$EMFAdjPrice)
dat$VWOAdjPriceLag1 <- lag(dat$VWOAdjPrice)
dat$FTSEPriceLag1 <- lag(dat$FTSEPrice)
# Calculating returns - daily
dat$emf_dret <- (dat$EMFAdjPrice / dat$EMFAdjPriceLag1) - 1
dat$fmem_dret <- (dat$FMEMAdjPrice / dat$FMEMAdjPriceLag1) - 1
dat$vwo_dret <- (dat$VWOAdjPrice / dat$VWOAdjPriceLag1) - 1
dat$ftse_dret <- (dat$FTSEPrice / dat$FTSEPriceLag1) - 1
# Subsetting data to keep relevant variables
keepvars <- c("emf_dret",
"fmem_dret",
"vwo_dret",
"ftse_dret"
)
dat2 <- dat[keepvars]
# Summary statistics of key variables ==========================================
head(dat2)
summary(dat2)
plot(dat2)
hedge.ratio <- function(xvar, yvar) {
cov(xvar,
yvar,
use="pairwise.complete.obs")
/ var(xvar, na.rm=TRUE)
}
hr_emf_vwo <- hedge.ratio(dat2$emf_dret, dat2$vwo_dret)
hr_emf_ftse <- hedge.ratio(dat2$emf_dret, dat2$ftse_dret)
hr_fmem_vwo <- hedge.ratio(dat2$fmem_dret, dat2$vwo_dret)
hr_fmem_ftse <- hedge.ratio(dat2$fmem_dret, dat2$ftse_dret)
hr_vwo_ftse <- hedge.ratio(dat2$vwo_dret, dat2$ftse_dret)
hedge.ratio <- function(xvar, yvar) {
cov(xvar,
yvar,
use="pairwise.complete.obs"
)
/ var(xvar, na.rm=TRUE)
}
hedge.ratio <- function(xvar, yvar) {
cov(xvar,
yvar,
use="pairwise.complete.obs"
) / var(xvar, na.rm=TRUE)
}
hr_emf_vwo <- hedge.ratio(dat2$emf_dret, dat2$vwo_dret)
hr_emf_ftse <- hedge.ratio(dat2$emf_dret, dat2$ftse_dret)
hr_fmem_vwo <- hedge.ratio(dat2$fmem_dret, dat2$vwo_dret)
hr_fmem_ftse <- hedge.ratio(dat2$fmem_dret, dat2$ftse_dret)
hr_vwo_ftse <- hedge.ratio(dat2$vwo_dret, dat2$ftse_dret)
he_emf_vwo <- 1 - ((var(dat2$vwo_dret, na.rm=TRUE) +
hr_emf_vwo ^ 2 *
var(dat2$emf_dret, na.rm=TRUE) -
2 * hr_emf_vwo *
cov(dat2$emf_dret,
dat2$vwo_dret,
use="pairwise.complete.obs"))
/ var(dat2$vwo_dret, na.rm=TRUE))
hedge.ratio <- function(xvar, yvar) {
cov(xvar,
yvar,
use="pairwise.complete.obs"
) / var(xvar, na.rm=TRUE)
}
hr_emf_vwo <- hedge.ratio(dat2$emf_dret, dat2$vwo_dret)
hr_emf_ftse <- hedge.ratio(dat2$emf_dret, dat2$ftse_dret)
hr_fmem_vwo <- hedge.ratio(dat2$fmem_dret, dat2$vwo_dret)
hr_fmem_ftse <- hedge.ratio(dat2$fmem_dret, dat2$ftse_dret)
hr_vwo_ftse <- hedge.ratio(dat2$vwo_dret, dat2$ftse_dret)
View(dat2)
is.na(dat2)
sum(is.na(dat2))
colSums(is.na(dat2))
?na.omit
?na.omit()
dat2 <- na.omit(dat2)
hedge.ratio <- function(xvar, yvar){
cov(xvar, yvar) / var(xvar)
}
hr_emf_vwo <- hedge.ratio(dat2$emf_dret, dat2$vwo_dret)
hr_emf_ftse <- hedge.ratio(dat2$emf_dret, dat2$ftse_dret)
hr_fmem_vwo <- hedge.ratio(dat2$fmem_dret, dat2$vwo_dret)
hr_fmem_ftse <- hedge.ratio(dat2$fmem_dret, dat2$ftse_dret)
hr_vwo_ftse <- hedge.ratio(dat2$vwo_dret, dat2$ftse_dret)
rm(hr_emf_vwo)
hedge.ratio <- function(xvar, yvar){
cov(xvar, yvar) / var(xvar)
}
rm(hedge.ratio())
rm(hedge.ratio)
hedge.ratio <- function(xvar, yvar){
cov(xvar, yvar) / var(xvar)
}
hr_emf_vwo <- hedge.ratio(dat2$emf_dret, dat2$vwo_dret)
rm(hr_emf_vwo)
hr_emf_vwo <- hedge.ratio(dat2$emf_dret, dat2$vwo_dret)
rm(he_emf_vwo)
he_emf_vwo <- 1 - (
(var(dat2$vwo_dret) + hr_emf_vwo ^ 2 * var(dat2$emf_dret) -
2 * hr_emf_vwo * cov(dat2$emf_dret, dat2$vwo_dret))
/ var(dat2$vwo_dret, na.rm=TRUE)
)
he_emf_vwo
rm(list=ls())
dat <- as_tibble(read.csv("MainData01_CSV.csv"))
# dat <- read.csv("MainData01_CSV.csv")
# names(dat)
# head(dat, n = 5)
# attach(dat)
## Data cleaning and sorting ===================================================
dat$Dates <- as.Date(dat$Dates, "%m/%d/%Y")           # Convert char into dates
dat <- dat[order(dat$Dates, decreasing = FALSE),]     # Sort by column(s)
dat$FMEMAdjPriceLag1 <- lag(dat$FMEMAdjPrice)
dat$EMFAdjPriceLag1 <- lag(dat$EMFAdjPrice)
dat$VWOAdjPriceLag1 <- lag(dat$VWOAdjPrice)
dat$FTSEPriceLag1 <- lag(dat$FTSEPrice)
# Calculating returns - daily
dat$emf_dret <- (dat$EMFAdjPrice / dat$EMFAdjPriceLag1) - 1
dat$fmem_dret <- (dat$FMEMAdjPrice / dat$FMEMAdjPriceLag1) - 1
dat$vwo_dret <- (dat$VWOAdjPrice / dat$VWOAdjPriceLag1) - 1
dat$ftse_dret <- (dat$FTSEPrice / dat$FTSEPriceLag1) - 1
# Subsetting data to keep relevant variables
keepvars <- c(
"emf_dret",
"fmem_dret",
"vwo_dret",
"ftse_dret"
)
dat2 <- dat[keepvars]
dat2 <- na.omit(dat2)
# Summary statistics of key variables ==========================================
head(dat2)
summary(dat2)
plot(dat2)
hedge.ratio <- function(xvar, yvar){
cov(xvar, yvar) / var(xvar)
}
hr_emf_vwo <- hedge.ratio(dat2$emf_dret, dat2$vwo_dret)
hr_emf_ftse <- hedge.ratio(dat2$emf_dret, dat2$ftse_dret)
hr_fmem_vwo <- hedge.ratio(dat2$fmem_dret, dat2$vwo_dret)
hr_fmem_ftse <- hedge.ratio(dat2$fmem_dret, dat2$ftse_dret)
hr_vwo_ftse <- hedge.ratio(dat2$vwo_dret, dat2$ftse_dret)
hedge.effec <- function(xvar, yvar, hr_value){
1 - (var(yvar) + hr_value^2 * var(xvar) - 2*hr_value * cov(xvar, yvar))
/ var(yvar)
}
hedge.effec <- function(xvar, yvar, hr_value){
1 - (var(yvar) + hr_value^2 * var(xvar) - 2*hr_value * cov(xvar, yvar))/
var(yvar)
}
he_emf_vwo <- hedge.effec(dat2$emf_dret, dat2$vwo_dret, hr_emf_vwo)
he_emf_vwo <- hedge.effec(dat2$emf_dret, dat2$vwo_dret, hr_emf_vwo)
he_emf_ftse <- hedge.effec(dat2$emf_dret, dat2$ftse_dret, hr_emf_ftse)
he_fmem_vwo <- hedge.effec(dat2$fmem_dret, dat2$vwo_dret, hr_fmem_vwo)
he_fmem_ftse <- hedge.effec(dat2$fmem_dret, dat2$ftse_dret, hr_fmem_ftse)
he_vwo_ftse <- hedge.effec(dat2$vwo_dret, dat2$ftse_dret, hr_vwo_ftse)
View(dat)
mean.hedged <- function(fut, spot, hr){
mean(spot) + hr*mean(fut)
}
mh_emf_vwo <- mean.hedged(dat2$emf_dret, dat2$vwo_dret, hr_emf_vwo)
mh_fmem_vwo <- mean.hedged(dat2$fmem_dret, dat2$vwo_dret, hr_fmem_vwo)
mh_emf_ftse <- mean.hedged(dat2$emf_dret, dat2$ftse_dret, hr_emf_ftse)
mh_fmem_ftse <- mean.hedged(dat2$fmem_dret, dat2$ftse_dret, hr_fmem_ftse)
mh_vwo_ftse <- mean.hedged(dat2$vwo_dret, dat2$ftse_dret, hr_vwo_ftse)
