install.packages("pacman")
pacman::p_load(pacman,
dplyr,
tidyr,
stringr,
lubridate,
httr,
ggvis,
ggplot2,
shiny,
rio,
rmarkdown
)
# library(datasets)
## Setting working directory ===================================================
getwd()
setwd("C:/Users/juanf/OneDrive/GitRepos/emf_futures/data")
## Importing data ==============================================================
# dat <- as_tibble(read.csv("MainData01_CSV.csv"))
dat <- read.csv("MainData01_CSV.csv")
# names(dat)
# head(dat, n = 5)
#attach(dat)
## Data cleaning and sorting ===================================================
dat$Dates <- as.Date(dat$Dates, "%m/%d/%Y")           # Convert char into dates
#dat$Dates <- NULL                                    # Remove a column
dat <- dat[order(dat$Dates, decreasing = FALSE),]     # Sort by column(s)
## Calculating the Hedge Ratio =================================================
# Calculating lagged values
dat$FMEMAdjPriceLag1 <- lag(dat$FMEMAdjPrice)
dat$EMFAdjPriceLag1 <- lag(dat$EMFAdjPrice)
dat$VWOAdjPriceLag1 <- lag(dat$VWOAdjPrice)
dat$FTSEPriceLag1 <- lag(dat$FTSEPrice)
# Calculating returns - daily
dat$FMEMAdjDreturn <- (dat$FMEMAdjPrice / dat$FMEMAdjPriceLag1) - 1
dat$EMFAdjDreturn <- (dat$EMFAdjPrice / dat$EMFAdjPriceLag1) - 1
dat$VWOAdjDreturn <- (dat$VWOAdjPrice / dat$VWOAdjPriceLag1) - 1
dat$FTSEDreturn <- (dat$FTSEPrice / dat$FTSEPriceLag1) - 1
# Subsetting data to keep relevant variables
keepvars <- c("Dates",
"FMEMAdjDreturn",
"EMFAdjDreturn",
"VWOAdjDreturn",
"FTSEDreturn"
)
dat2 <- dat[keepvars]
install.packages("pacman")
# Summary statistics of returns
summary(dat2$FMEMAdjDreturn)
lmodel <- lm(VWOAdjDreturn ~ EMFAdjDreturn, data = dat2)
summary(lmodel)
slope <- lmodel$coefficients[2]
intercept <- lmodel$coefficients[1]
# Plot the regression line
dat2 %>%
ggplot(aes(x = EMFAdjDreturn, y = VWOAdjDreturn)) +
geom_point(colour = "red") +
geom_smooth(method = "lm", fill = NA)
dat2 %>%
ggplot(aes(x = EMFAdjDreturn, y = VWOAdjDreturn)) +
geom_point(colour = "red") +
geom_smooth(method = "lm", fill = NA)
dat2 %>%
ggplot(aes(x = EMFAdjDreturn, y = VWOAdjDreturn)) +
geom_point(colour = "red") +
geom_smooth(method = "lm", fill = NA)
pacman::p_load(pacman,
dplyr,
tidyr,
stringr,
lubridate,
httr,
ggvis,
ggplot2,
shiny,
rio,
rmarkdown
)
dat2 %>%
ggplot(aes(x = EMFAdjDreturn, y = VWOAdjDreturn)) +
geom_point(colour = "red") +
geom_smooth(method = "lm", fill = NA)
plot(dat2$EMFAdjDreturn, dat2$VWOAdjDreturn,
col = "red3",
pch = 19,
main = "EMF vs. VWO Daily Returns",
xlab = "EMF Return",
ylab = "VWO Return"
)
abline(lm(dat2$VWOAdjDreturn ~ dat2$EMFAdjDreturn))
plot(dat2$EMFAdjDreturn, dat2$VWOAdjDreturn,
col = "red3",
pch = 19,
main = "EMF vs. VWO Daily Returns",
xlab = "EMF Return",
ylab = "VWO Return"
)
abline(lm(dat2$VWOAdjDreturn ~ dat2$EMFAdjDreturn))
hr_EMF_VWO <- cov(dat2$VWOAdjDreturn,dat2$EMFAdjDreturn, use = "pairwise.complete.obs") / var(dat2$EMFAdjDreturn, na.rm=TRUE)
hr_EMF_VWO
